============================
 How to Use 0-add_integer.py
============================

This library is very simple, since it only has one function called
``add_integer(a, b=98)``.

Numbers
=======

``add_integer(a, b=98)`` returns the addition of its arguments.  For numbers,
that value is equivalent to using the ``+`` operator.

>>> add_integer = __import__('0-add_integer').add_integer

*** add two int ***
>>> add_integer(2, 3)
5
>>> add_integer(-2, 5)
3

*** negative ints***
>>> add_integer(-2, -5)
-7

*** It also works with floating-point ***
>>> add_integer(2.1, -3)
-1

*** two float ***
>>> add_integer(3.1, 1.9)
4

*** float overflow ***
>>> add_integer(3, float('inf'))
Traceback (most recent call last):
OverflowError: cannot convert float infinity to integer

*** can't convert Nan ***
>>> add_integer(float('nan'))
Traceback (most recent call last):
ValueError: cannot convert float NaN to integer

*** one integer ***

>>> add_integer(2)
100

*** a must be integer ***
>>> add_integer("Afeez", 45)
Traceback (most recent call last):
TypeError: a must be an integer

*** b must be integer ***
>>> add_integer("afeez", "Lasisi")
Traceback (most recent call last):
TypeError: a must be an integer
